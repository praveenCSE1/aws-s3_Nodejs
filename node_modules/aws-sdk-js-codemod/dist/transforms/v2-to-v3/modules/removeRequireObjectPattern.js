"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeRequireObjectPattern = void 0;
const config_1 = require("../config");
const getRequireDeclaratorsWithObjectPattern_1 = require("./getRequireDeclaratorsWithObjectPattern");
const removeDeclaration_1 = require("./removeDeclaration");
const removeRequireObjectPattern = (j, source, { localName, sourceValue }) => {
    const requireDeclarators = (0, getRequireDeclaratorsWithObjectPattern_1.getRequireDeclaratorsWithObjectPattern)(j, source, {
        identifierName: localName,
        sourceValue,
    });
    requireDeclarators.forEach((varDeclarator) => {
        // Remove ObjectProperty from Variable Declarator.
        const varDeclaratorId = varDeclarator.value.id;
        varDeclaratorId.properties = varDeclaratorId.properties.filter((property) => {
            if (!config_1.OBJECT_PROPERTY_TYPE_LIST.includes(property.type))
                return true;
            const propertyValue = property.value;
            return propertyValue.type !== "Identifier" || propertyValue.name !== localName;
        });
        // Remove VariableDeclarator if there are no properties.
        if (varDeclaratorId.properties.length === 0) {
            const varDeclaration = varDeclarator.parentPath.parentPath;
            varDeclaration.value.declarations = varDeclaration.value.declarations.filter((declaration) => declaration !== varDeclarator.value);
            // Remove VariableDeclaration if there are no declarations.
            if (varDeclaration.value.declarations?.length === 0) {
                (0, removeDeclaration_1.removeDeclaration)(j, source, varDeclaration);
            }
        }
    });
};
exports.removeRequireObjectPattern = removeRequireObjectPattern;
