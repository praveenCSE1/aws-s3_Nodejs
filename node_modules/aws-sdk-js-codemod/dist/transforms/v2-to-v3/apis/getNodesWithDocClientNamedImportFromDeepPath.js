"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodesWithDocClientNamedImportFromDeepPath = void 0;
const config_1 = require("../config");
const modules_1 = require("../modules");
const utils_1 = require("../utils");
const getNodesWithDocClientNamedImportFromDeepPath = (j, source, importType) => {
    const deepImportPath = (0, utils_1.getClientDeepImportPath)(config_1.DYNAMODB);
    if (importType === modules_1.ImportType.REQUIRE) {
        return source
            .find(j.VariableDeclarator, {
            init: {
                type: "CallExpression",
                callee: { type: "Identifier", name: "require" },
                arguments: [{ value: deepImportPath }],
            },
        })
            .filter((variableDeclarator) => variableDeclarator.value.id.type === "ObjectPattern" &&
            (variableDeclarator.value.id.properties || []).some((property) => {
                if (!config_1.OBJECT_PROPERTY_TYPE_LIST.includes(property.type)) {
                    return false;
                }
                const propertyKey = property.key;
                return propertyKey.type === "Identifier" && propertyKey.name === config_1.DOCUMENT_CLIENT;
            }))
            .map((variableDeclarator) => variableDeclarator.parentPath.parentPath);
    }
    return source
        .find(j.ImportDeclaration, {
        type: "ImportDeclaration",
        source: { value: deepImportPath },
    })
        .filter((importDeclaration) => (importDeclaration.value.specifiers || []).some((importDeclaration) => importDeclaration.type === "ImportSpecifier" &&
        importDeclaration.imported.name === config_1.DOCUMENT_CLIENT));
};
exports.getNodesWithDocClientNamedImportFromDeepPath = getNodesWithDocClientNamedImportFromDeepPath;
